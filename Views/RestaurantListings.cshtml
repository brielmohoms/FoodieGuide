@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IPublishedContent>
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Extensions


@{
    Layout = "master.cshtml";

    var current = Model;  

    var restaurantListings = Umbraco.ContentAtRoot()
      .First(x => x.ContentType.Alias == "restaurantListings");

    var restaurants = restaurantListings.DescendantsOfType("restaurantPage")
      .ToArray();


    var byCategory = restaurants
        .SelectMany(r => r.Value<IEnumerable<IPublishedContent>>("category") ?? Enumerable.Empty<IPublishedContent>(),
                    (r, cat) => new { Restaurant = r, Category = cat })
        .GroupBy(x => x.Category.Name)
        .ToArray();

}

@foreach (var grp in byCategory)
{
    var cat = grp.First().Category;
    var catName = cat?.Name ?? "Uncategorized";
    var carouselId = $"carousel-{catName.Replace(" ", "").ToLower()}";

    <section class="my-5">
        <h2>Restaurants offering @catName</h2>

        <div id="@carouselId"
             class="carousel slide"
             data-bs-ride="carousel"
             data-bs-interval="4000">

            <div class="carousel-inner">
                @{
                    int itemsPerSlide = 3;
                    var total = grp.Count();
                    int slideIndex = 0;

                    while (slideIndex < total)
                    {
                        var items = grp.Skip(slideIndex).Take(itemsPerSlide).ToList();
                        var isActive = (slideIndex == 0) ? "active" : "";

                        <div class="carousel-item @isActive">
                            <div class="d-flex justify-content-center gap-3 px-3">
                                @foreach (var entry in items)
                                {
                                    var page = entry.Restaurant;
                                    var name = page.Value<string>("restaurantName");
                                    var desc = page.Value<string>("description");
                                    var img = page.Value<IPublishedContent>("image")?.Url();
                                    var url = page.Url();

                                    <div class="card" style="width: 18rem;">
                                        <img src="@img" class="card-img-top" alt="@name" />
                                        <div class="card-body d-flex flex-column">
                                            <h5 class="card-title">@name</h5>
                                            <p class="card-text flex-fill">@desc</p>
                                            <a href="@url" class="btn btn-primary mt-2">View →</a>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        slideIndex += itemsPerSlide;
                    }
                }
            </div>

            @if (grp.Count() > itemsPerSlide)
            {
                <button class="carousel-control-prev" type="button" data-bs-target="#restaurantCarousel" data-bs-slide="prev">
      <span class="carousel-control-prev-icon"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#restaurantCarousel" data-bs-slide="next">
      <span class="carousel-control-next-icon"></span>
      <span class="visually-hidden">Next</span>
    </button>
            }
        </div>
    </section>
}


