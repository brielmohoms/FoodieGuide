@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Extensions
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IPublishedContent>

@{
    Layout = "master.cshtml";

    // basic properties
    var title       = Model.Value<string>("restaurantName")      ?? Model.Name;
    var description = Model.Value<string>("description")         ?? "";
    var imageUrl    = Model.Value<IPublishedContent>("image")?.Url() ?? "";
    var categories  = Model.Value<string[]>("category")         ?? Array.Empty<string>();
    //var rating      = Model.Value<int?>("rating");

    var address        = Model.Value<string>("address");
    var openingHours   = Model.Value<string>("openingHours");
    var phone          = Model.Value<string>("phone");
    var websiteUrl     = Model.Value<string>("websiteUrl");

    var reviews = Model.Value<BlockListModel>("reviews")
                       ?? Enumerable.Empty<BlockListItem>();

    var blocks = reviews?.OfType<BlockListItem>() ?? Enumerable.Empty<BlockListItem>();

    // pull each individual rating out
    var scores = blocks
        .Select(b => b.Content.Value<int>("reviewRating"))
        .ToList();

    // compute the average (as a double)
    var avg = scores.Any()
        ? scores.Average()
        : 0;

    // for simple 1–5 star UI we'll round to nearest integer
    var avgInt = (int) Math.Round(avg);
}

<section class="restaurant-hero" style="background-image:url('@imageUrl');>
    <div class="hero-overlay"></div>
    <div class="hero-content text-white text-center">
      <h1>@title</h1>
  </div>
</section>

<section class="stats-bar py-3 bg-white shadow-sm">
  <div class="container d-flex justify-content-between flex-wrap text-center">
    @if(!string.IsNullOrWhiteSpace(address)) {
    <div class="stat-item">
      <i class="bi bi-geo-alt-fill" style="color:#3b5998"></i>
      <div>@address</div>
    </div>
    }

    @if(!string.IsNullOrWhiteSpace(openingHours)) {
    <div class="stat-item">
      <i class="bi bi-clock-fill" style="color:#3b5998"></i>
      <div>@openingHours</div>
    </div>
    }

    @if(!string.IsNullOrWhiteSpace(phone)) {
    <div class="stat-item">
      <i class="bi bi-telephone-fill" style="color:#3b5998"></i>
      <div><a href="tel:@phone">@phone</a></div>
    </div>
    }

    @if(!string.IsNullOrWhiteSpace(websiteUrl)) {
    <div class="stat-item">
      <i class="bi bi-globe" style="color:#3b5998"></i>
      <div><a href="@websiteUrl" target="_blank">Website</a></div>
    </div>
    }

  </div>
</section>

<section class="py-5">
    <div class="container">
        <div class="row gx-5">
            <!-- DESCRIPTION COLUMN -->
            <div class="col-md-6">
                <h2>Description</h2>
                <p>@description</p>
            </div>

            <!-- REVIEWS COLUMN -->
            <div class="col-md-6">
                <!-- STAR RATING HEADER -->
                <div class="d-flex align-items-center mb-3">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= avgInt)
                        {
                            <i class="bi bi-star-fill fs-4" style="color: #3b5998;"></i>
                        }
                        else
                        {
                            <i class="bi bi-star fs-4 text-muted"></i>
                        }
                    }
                    <span class="ms-2 text-muted">(@scores.Count review@(scores.Count == 1 ? "" : "s"))</span>
                </div>

                <h3>Reviews</h3>

                @if (!reviews.Any())
                {
                    <p class="text-muted">No reviews yet.</p>
                }
                else
                {
                    <div class="row gy-4">
                        @foreach (var block in reviews)
                        {
                            var r = block.Content!;
                            var reviewer        = r.Value<string>("reviewerName");
                            var date            = r.Value<DateTime>("date");
                            var reviewRating    = r.Value<int>("reviewRating");
                            var comment         = r.Value<string>("comment");

                            <div class="col-12">
                                <div class="card p-3 h-100">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <strong>@reviewer</strong>
                                        <small class="text-muted">@date.ToString("MMM d, yyyy")</small>
                                    </div>
                                    <div class="mb-2">
                                        @* render stars *@
                                        @for (int i = 0; i < reviewRating; i++)
                                        {
                                            <i class="bi bi-star-fill" style="color: #3b5998;"></i>
                                        }
                                        @for (int i = reviewRating; i < 5; i++)
                                        {
                                            <i class="bi bi-star text-muted"></i>
                                        }
                                        <span class="ms-2 text-muted">@($"{reviewRating}/5")</span>
                                    </div>
                                    <p class="mb-0">@comment</p>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<script>
  // when the DOM is ready
  document.addEventListener("DOMContentLoaded", function() {
  
    // give the browser one tick to register the starting state
    requestAnimationFrame(function() {
      document
        .querySelector(".restaurant-hero .hero-content")
        .classList.add("visible");
    });
  });
</script>
